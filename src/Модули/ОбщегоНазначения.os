#Использовать json 

Функция ФайлСуществует(Знач пИмяФайла) Экспорт
	
	файл = Новый Файл( пИмяФайла );
	
	Возврат файл.Существует()
	И Не файл.ЭтоКаталог();
	
КонецФункции

Функция ПолучитьТаблицуНастроек( Знач пФайлНастроек ) Экспорт
	
	таблицаНастроек = Новый ТаблицаЗначений;
	таблицаНастроек.Колонки.Добавить("ruleId");
	таблицаНастроек.Колонки.Добавить("message");
	таблицаНастроек.Колонки.Добавить("filePath");
	таблицаНастроек.Колонки.Добавить("severity");
	таблицаНастроек.Колонки.Добавить("type");
	таблицаНастроек.Колонки.Добавить("effortMinutes");
	
	Если ФайлСуществует( пФайлНастроек ) Тогда
		
		настройки = ПрочитатьJSONФайл( пФайлНастроек );
		
		Для каждого цСтрокаНастройки Из настройки Цикл
			
			ЗаполнитьЗначенияСвойств( таблицаНастроек.Добавить(), цСтрокаНастройки );
			
		КонецЦикла;

	КонецЕсли;
	
	Возврат таблицаНастроек;

КонецФункции

Функция ПолучитьТекстИзФайла( Знач пИмяФайла )
	
	прочитанныйТекст = "";
	чтениеТекста = Новый ЧтениеТекста(пИмяФайла, КодировкаТекста.UTF8);
	прочитанныйТекст = чтениеТекста.Прочитать();
	чтениеТекста.Закрыть();
	возврат прочитанныйТекст;

КонецФункции

Функция ПрочитатьJSONФайл( Знач пИмяФайла ) Экспорт
	
	ПарсерJSON  = Новый ПарсерJSON();
	Возврат ПарсерJSON.ПрочитатьJSON(ПолучитьТекстИзФайла(пИмяФайла), Истина, Ложь, Истина);

	// Ждем, когда починят штатный

	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.ОткрытьФайл( пИмяФайла, "UTF-8" );
	
	Возврат ПрочитатьJSON(ЧтениеJSON);
	
КонецФункции

Процедура ЗаписатьJSONВФайл( Знач пЗначение, Знач пИмяФайла ) Экспорт
	
	ПарсерJSON  = Новый ПарсерJSON();

	ЗаписьТекста = Новый ЗаписьТекста;
	ЗаписьТекста.Открыть(пИмяФайла, "UTF-8");
	ЗаписьТекста.ЗаписатьСтроку(ПарсерJSON.ЗаписатьJSON(пЗначение));
	ЗаписьТекста.Закрыть();

	Возврат;

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ОткрытьФайл( пИмяФайла, "UTF-8");
	ЗаписатьJSON( ЗаписьJSON, пЗначение );
	ЗаписьJSON.Закрыть();

КонецПроцедуры

